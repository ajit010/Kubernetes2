pipeline {
    agent any

    environment {
        IMAGE_NAME = "image-name"
        CONTAINER_NAME = "mycontainer"
        APP_PORT = 81
        INTERNAL_PORT = 80
    }

    stages {
        stage('Pre-checks') {
            steps {
                script {
                    // Check for Docker and Git installations
                    sh "docker --version"
                    sh "git --version"
                }
            }
        }
        
        stage('Build & Deploy') {
            steps {
                // Get SHA1 of current commit
                script {
                    commit_id = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
                }
                // Remove any previous containers with the same name
                script {
                    def containerExists = sh(script: "docker ps -a --filter name=${CONTAINER_NAME} -q", returnStdout: true).trim()
                    if (containerExists) {
                        sh "docker rm -f ${containerExists}"
                    }
                }
                // Build the Docker image
                sh "docker build -t ${IMAGE_NAME}:${commit_id} ."
                // Deploy the Docker container
                sh "docker run -d -p ${APP_PORT}:${INTERNAL_PORT} --name ${CONTAINER_NAME} ${IMAGE_NAME}:${commit_id}"
            }
        }
    }

    post {
        success {
            echo "Build and deployment succeeded. App is running on port ${APP_PORT}."
        }
        failure {
            echo "Build or deployment failed."
        }
    }
}
